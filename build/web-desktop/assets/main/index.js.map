{"version":3,"sources":["../file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/scripts/file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/scripts/GameManager.ts","../file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/scripts/file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/scripts/HttpClient.ts","../file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/scripts/file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/scripts/ResolutionAdjuster.ts","../file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/cocos-telegram-miniapps/scripts/file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/cocos-telegram-miniapps/scripts/telegram-web.ts"],"names":["ccclass","property","_decorator","GameManager","_dec","_dec2","Label","_dec3","_dec4","_dec5","_dec6","_class","_class2","Component","constructor","arguments","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","connectUI","_base_url","_tg_auth_url","onLoad","console","info","initTonConnect","TelegramWebApp","Instance","init","then","res","success","webAppInitData","getTelegramWebAppInitData","user","idLbl","string","id","nameLbl","username","initDataLbl","getTelegramInitData","start","update","deltaTime","onConnect","isConnected","disconnect","openModal","onShare","share","TonConnectUI","manifestUrl","onModalStateChange","state","log","updateConnect","onStatusChange","error","connected","address","account","addressLbl","Address","parseRaw","toString","testOnly","bounceable","connectLbl","tgTestLogin","data","response","HttpClient","post","token","response2","get","message","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","_RF","pop","request","url","options","fetch","ok","Error","status","statusText","json","baseUrl","path","params","authToken","URL","forEach","_ref","key","value","searchParams","append","headers","method","body","JSON","stringify","ResolutionAdjuster","CCInteger","CCBoolean","isAutoFit","autoFit","window","addEventListener","bind","designSize","View","instance","getDesignResolutionSize","viewPortRect","getViewportRect","setOrientation","rateR","height","width","rateV","Math","abs","size","setDesignResolutionSize","fixedWidthDesignWidth","fixedWidthDesignHeight","ResolutionPolicy","FIXED_WIDTH","fixedHeightDesignWidth","fixedHeightDesignHeight","FIXED_HEIGHT","tgLoadPromise","Promise","resolve","reject","sys","platform","Platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","Telegram","WebApp","clearInterval","onerror","head","appendChild","_tgWebAppJS","_instance","openTelegramLink","openLink","text","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","name","getTelegramWebApp","initDataUnsafe","getTelegramUser","initData","openInvoice","callback","alert","showAlert"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, Label, Button, Node } from 'cc';\nimport { TelegramWebApp, WebAppInitData } from '../cocos-telegram-miniapps/scripts/telegram-web';\nimport { TonConnectUI, Address } from '@ton/cocos-sdk';\nimport { HttpClient } from './HttpClient';\n\nconst { ccclass, property } = _decorator;\n\ninterface ResponseUser {\n    status: string;\n    message?: string;\n    user?: User;\n}\n\ninterface ResponseProtected {\n    message?: string;\n    user?: User;\n}\n\ninterface User {\n    id: string;\n    first_name: string;\n    last_name: string;\n    username: string;\n    photo_url: string;\n    auth_date: string;\n    token: string;\n}\n\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    @property(Label)\n    idLbl: Label = null;\n\n    @property(Label)\n    nameLbl: Label = null;\n\n    @property(Label)\n    addressLbl: Label = null;\n\n    @property(Label)\n    connectLbl: Label = null;\n\n    @property(Label)\n    initDataLbl: Label = null;\n\n    protected connectUI: TonConnectUI = null;\n\n    private _base_url: string = \"http://127.0.0.1:5000\"; //\"https://alpha.audiera.fi:5000/api/\";\n    private _tg_auth_url: string = \"/auth/telegram\"\n\n    protected onLoad() {\n        console.info(\"onLoad\");\n        this.initTonConnect();\n        //获取Telegram用户信息，用于小游戏登录，使用user id作为登录的唯一id\n        TelegramWebApp.Instance.init().then(res => {\n            console.info(\"telegram web app init : \", res.success);\n            var webAppInitData = TelegramWebApp.Instance.getTelegramWebAppInitData();\n            console.info(webAppInitData);\n            console.info(webAppInitData.user);\n            if (webAppInitData && webAppInitData.user) {\n                this.idLbl.string = \"Id: \" + webAppInitData.user.id; //telegram用户唯一id，可以用于tg小游戏登录\n                this.nameLbl.string = \"UserName: \" + webAppInitData.user.username;\n            }\n\n            this.initDataLbl.string = \"Init Data: \" + TelegramWebApp.Instance.getTelegramInitData();\n            console.info(\"Init Data: \" + TelegramWebApp.Instance.getTelegramInitData());\n\n        });\n    }\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    public onConnect() {\n        if (this.isConnected()) {\n            this.connectUI.disconnect();\n        } else {\n            this.connectUI.openModal();\n        }\n    }\n\n    //Telegram小游戏分享\n    public onShare() {\n        console.info(\"share \");\n        TelegramWebApp.Instance.share(\"https://t.me/MyTestGame029Bot/TgTest\", \"Invite you to play a very interesting game\");\n    }\n\n    //初始化ton connect ui\n    private initTonConnect() {\n        this.connectUI = new TonConnectUI({\n            manifestUrl: 'https://ton-connect.github.io/demo-dapp-with-wallet/tonconnect-manifest.json'\n        });\n      \n\n        // Listen for connection status changes\n        this.connectUI.onModalStateChange(state => {\n            console.log(\"model state changed! : \", state);\n            this.updateConnect();\n        });\n\n        // Listen for wallet status changes\n        this.connectUI.onStatusChange(info => {\n            console.log(\"wallet info status changed : \", info);\n            this.updateConnect();\n        });\n        this.updateConnect();\n    }\n\n    private isConnected(): boolean {\n        if (!this.connectUI) {\n            console.error(\"ton ui not inited!\");\n            return false;\n        }\n        return this.connectUI.connected;\n    }\n\n    // Get the wallet address after successful connection\n    private updateConnect() {\n        if (this.isConnected()) {\n            const address = this.connectUI.account.address; //用户连接的钱包地址\n            this.addressLbl.string = \"Address: \" + Address.parseRaw(address).toString({ testOnly: false, bounceable: false });\n            this.connectLbl.string = \"Connected\";\n        } else {\n            this.connectLbl.string = \"Connect\";\n            this.addressLbl.string = \"Address: \";\n        }\n    }\n\n    private async tgTestLogin() {\n        //for test telegram 授权登录接口\n        var data = {\"id\": \"1\", \"first_name\": \"daniel\", \"last_name\": \"liu\", \"username\": \"daniel_liu029\"};\n        try {\n            var response = await HttpClient.post<ResponseUser>(this._base_url, this._tg_auth_url, data);\n            console.info(response.user.token);\n\n            var response2 = await HttpClient.get<ResponseProtected>(this._base_url, \"/protected\", null, response.user.token);\n            console.info(response2.message);\n        } catch(error) {\n            console.error(error);\n        }\n        // \n    }\n    \n}\n\n","import { _decorator} from 'cc';\n\nexport interface FetchOptions {\n    method?: string;\n    headers?: HeadersInit;\n    body?: BodyInit;\n}\n\nexport class HttpClient {\n    /**\n     * GET 请求\n     */\n    public static async request<T>(url: URL, options?: FetchOptions): Promise<T> {\n        try {\n            const response = await fetch(url, options);\n\n            if (!response.ok) {\n                throw new Error(`请求失败: ${response.status} - ${response.statusText}`);\n            }\n\n            return await response.json() as T;\n        } catch (error) {\n            console.error('网络请求错误:', error);\n            throw error;\n        }\n    }\n\n    // GET 请求\n    public static async get<T>(baseUrl: string, path: string, params?: Record<string, any>, authToken?: string) {\n        const url = new URL(path, baseUrl);\n        if (params) {\n            params.forEach(([key, value]) => {\n                url.searchParams.append(key, value as string);\n            });\n        }\n        var headers = {'Content-Type': 'application/json'};\n        if (authToken) {\n            headers['Authorization'] = `Bearer ${authToken}`;\n        }\n        return HttpClient.request<T>(url, {\n            method: 'GET',\n            headers: headers\n        });\n    }\n\n    // POST 请求\n    public static async post<T>(baseUrl: string, path: string, data?: any, authToken?: string) {\n        const url = new URL(path, baseUrl);\n        var headers = {'Content-Type': 'application/json'};\n        if (authToken) {\n            headers['Authorization'] = `Bearer ${authToken}`;\n        }\n        return HttpClient.request<T>(url, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(data),\n        });\n    }\n}","import { _decorator, Canvas, CCBoolean, CCInteger, Component, Node, ResolutionPolicy, View } from 'cc';\nimport { LogManager } from '../../scripts/framework/common/LogManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ResolutionAdjuster')\nexport class ResolutionAdjuster extends Component {\n    @property(CCInteger)\n    fixedWidthDesignWidth: number = 1280;\n    @property(CCInteger)\n    fixedWidthDesignHeight: number = 720;\n\n    @property(CCInteger)\n    fixedHeightDesignWidth: number = 720;\n    @property(CCInteger)\n    fixedHeightDesignHeight: number = 1280;\n\n    @property(CCBoolean)\n    isAutoFit: boolean = true;\n\n    protected onLoad(): void {\n        if (this.isAutoFit)\n        {\n            this.autoFit();\n            window.addEventListener('resize', this.autoFit.bind(this));\n            // Screen.on('orientation-change', this.autoFit.bind(this));\n        }\n    }\n\n    protected start(): void {\n        if (this.isAutoFit)\n        {\n            this.autoFit();\n        }\n    }\n\n    private autoFit(): void {\n\n        let designSize = View.instance.getDesignResolutionSize();\n        // console.log(`desginSize = ${designSize}`);\n\n        // let visibleSize = View.instance.getVisibleSize();\n        // console.log(`visibleSize = ${visibleSize}`);\n\n        let viewPortRect = View.instance.getViewportRect();\n        View.instance.setOrientation\n        console.log(`viewPortRect = ${viewPortRect}`);\n        \n        let rateR = designSize.height / designSize.width;\n        let rateV = Math.abs(viewPortRect.size.height) / Math.abs(viewPortRect.size.width);\n        \n        // let rp = ResolutionPolicy.FIXED_HEIGHT;\n        // if (rateV < 1.0)\n        // {\n        //     rp = ResolutionPolicy.FIXED_WIDTH;\n        // }\n\n        console.log(`rateV = ${rateV}`)\n        if (rateV < 1.0)\n        {\n            View.instance.setDesignResolutionSize(this.fixedWidthDesignWidth, this.fixedWidthDesignHeight, ResolutionPolicy.FIXED_WIDTH);\n        }\n        else\n        {\n            View.instance.setDesignResolutionSize(this.fixedHeightDesignWidth, this.fixedHeightDesignHeight, ResolutionPolicy.FIXED_HEIGHT);\n        }\n    }\n}\n\n\n","import { _decorator, sys } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\n    if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n        const script = document.createElement(\"script\");\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\n        script.async = true;\n        script.onload = () => {\n            const intervalId = setInterval(() => {\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                    resolve((window as any).Telegram.WebApp);\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n        document.head.appendChild(script);\n    }\n});\n\nexport interface WebAppUser {\n    id: number;\n    is_bot: boolean;\n    first_name: string;\n    last_name?: string;\n    username?: string;\n    language_code?: string;\n    is_premium?: boolean;\n    added_to_attachment_menu?: boolean;\n    allows_write_to_pm?: boolean;\n    photo_url?: string;\n}\nexport interface WebAppChat {\n    id: number;\n    type: 'private' | 'group' | 'supergroup' | 'channel';\n    title: string;\n    username?: string;\n    photo_url?: string;\n}\nexport interface WebAppInitData {\n    query_id?: string;\n    user?: WebAppUser;\n    receiver?: WebAppUser;\n    chat?: WebAppChat;\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\n    chat_instance?: string;\n    start_param?: string;\n    can_send_after?: number;\n    auth_data: number;\n    hash: string;\n}\n\n@ccclass('TelegramWebApp')\nexport class TelegramWebApp {\n    private static _instance: TelegramWebApp;\n    private constructor() {\n\n    }\n    public static get Instance(): TelegramWebApp {\n        if (!TelegramWebApp._instance) {\n            TelegramWebApp._instance = new TelegramWebApp();\n        }\n        return TelegramWebApp._instance;\n    }\n\n    private _tgWebAppJS: any = null;\n    public async init(): Promise<{ success: boolean }> {\n        this._tgWebAppJS = await tgLoadPromise;\n\n        if (this._tgWebAppJS) {\n            return Promise.resolve({ success: true });\n        } else {\n            return Promise.resolve({ success: false });\n        }\n    }\n\n    public openTelegramLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openTelegramLink(url);\n    }\n\n    public openLink(url: string, options: any = {}) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openLink(url, options);\n    }\n\n    public share(url: string, text?: string) {\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\n        this.openTelegramLink(shareUrl);\n    }\n\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        const widget_link = {\n            text: shareText,\n            widget_link: {\n                url: widget_link_url,\n                name: widget_link_name,\n            },\n        };\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\n    }\n\n    public getTelegramWebApp() {\n        return this._tgWebAppJS;\n    }\n\n    public getTelegramWebAppInitData(): WebAppInitData {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe;\n    }\n\n\n    public getTelegramUser(): WebAppUser {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe.user;\n    }\n\n    public getTelegramInitData(): string {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initData;\n    }\n\n    public openInvoice(url: string, callback: any) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        this._tgWebAppJS.openInvoice(url, callback);\n    }\n\n    public alert(message: string) {\n        this._tgWebAppJS.showAlert(message);\n    }\n}\n\n\n"]}