{"version":3,"sources":["../file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/scripts/file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/scripts/GameManager.ts","../file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/scripts/file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/scripts/ResolutionAdjuster.ts","../file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/cocos-telegram-miniapps/scripts/file:/Users/liuyingbin/code/github/src/danielliu029/TgTest/assets/cocos-telegram-miniapps/scripts/telegram-web.ts"],"names":["ccclass","property","_decorator","GameManager","_dec","_dec2","Label","_dec3","_dec4","_dec5","_class","_class2","Component","constructor","arguments","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","connectUI","_webAppInitData","onLoad","console","info","initTonConnect","TelegramWebApp","Instance","init","then","res","success","getTelegramWebAppInitData","user","idLbl","string","id","nameLbl","username","start","update","deltaTime","onConnect","isConnected","disconnect","openModal","onShare","share","TonConnectUI","manifestUrl","onModalStateChange","state","log","updateConnect","onStatusChange","error","connected","address","account","addressLbl","Address","parseRaw","toString","testOnly","bounceable","connectLbl","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","_RF","pop","ResolutionAdjuster","CCInteger","_dec6","CCBoolean","_descriptor5","isAutoFit","autoFit","window","addEventListener","bind","designSize","View","instance","getDesignResolutionSize","viewPortRect","getViewportRect","setOrientation","rateR","height","width","rateV","Math","abs","size","setDesignResolutionSize","fixedWidthDesignWidth","fixedWidthDesignHeight","ResolutionPolicy","FIXED_WIDTH","fixedHeightDesignWidth","fixedHeightDesignHeight","FIXED_HEIGHT","tgLoadPromise","Promise","resolve","reject","sys","platform","Platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","Telegram","WebApp","clearInterval","onerror","Error","head","appendChild","_tgWebAppJS","_instance","openTelegramLink","url","openLink","options","text","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","name","getTelegramWebApp","initDataUnsafe","getTelegramUser","getTelegramInitData","initData","openInvoice","callback","alert","message","showAlert"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, Label, Button, Node } from 'cc';\nimport { TelegramWebApp, WebAppInitData } from '../cocos-telegram-miniapps/scripts/telegram-web';\nimport { TonConnectUI, Address } from '@ton/cocos-sdk';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    @property(Label)\n    idLbl: Label = null;\n\n    @property(Label)\n    nameLbl: Label = null;\n\n    @property(Label)\n    addressLbl: Label = null;\n\n    @property(Label)\n    connectLbl: Label = null;\n\n    protected connectUI: TonConnectUI = null;\n    private _webAppInitData: WebAppInitData = null;\n\n    protected onLoad() {\n        console.info(\"onLoad\");\n        this.initTonConnect();\n        TelegramWebApp.Instance.init().then(res => {\n            console.info(\"telegram web app init : \", res.success);\n            this._webAppInitData = TelegramWebApp.Instance.getTelegramWebAppInitData();\n            console.info(this._webAppInitData);\n            console.info(this._webAppInitData.user);\n            if (this._webAppInitData && this._webAppInitData.user) {\n                this.idLbl.string = \"Id: \" + this._webAppInitData.user.id; //telegram用户唯一id，可以用于tg小游戏登录\n                this.nameLbl.string = \"UserName: \" + this._webAppInitData.user.username;\n            } \n        });\n    }\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    public onConnect() {\n        if (this.isConnected()) {\n            this.connectUI.disconnect();\n        } else {\n            this.connectUI.openModal();\n        }\n    }\n\n    public onShare() {\n        console.info(\"share \");\n        TelegramWebApp.Instance.share(\"https://t.me/MyTestGame029Bot/TgTest\", \"Invite you to play a very interesting game\");\n    }\n\n    private initTonConnect() {\n        this.connectUI = new TonConnectUI({\n            manifestUrl: 'https://ton-connect.github.io/demo-dapp-with-wallet/tonconnect-manifest.json'\n        });\n      \n\n        // Listen for connection status changes\n        this.connectUI.onModalStateChange(state => {\n            console.log(\"model state changed! : \", state);\n            this.updateConnect();\n        });\n\n        // Listen for wallet status changes\n        this.connectUI.onStatusChange(info => {\n            console.log(\"wallet info status changed : \", info);\n            this.updateConnect();\n        });\n        this.updateConnect();\n    }\n\n    private isConnected(): boolean {\n        if (!this.connectUI) {\n            console.error(\"ton ui not inited!\");\n            return false;\n        }\n        return this.connectUI.connected;\n    }\n\n    // Get the wallet address after successful connection\n    private updateConnect() {\n        if (this.isConnected()) {\n            const address = this.connectUI.account.address; //用户连接的钱包地址\n            this.addressLbl.string = \"Address: \" + Address.parseRaw(address).toString({ testOnly: false, bounceable: false });\n            this.connectLbl.string = \"Connected\";\n        } else {\n            this.connectLbl.string = \"Connect\";\n            this.addressLbl.string = \"Address: \";\n        }\n    }\n    \n}\n\n","import { _decorator, Canvas, CCBoolean, CCInteger, Component, Node, ResolutionPolicy, View } from 'cc';\nimport { LogManager } from '../../scripts/framework/common/LogManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ResolutionAdjuster')\nexport class ResolutionAdjuster extends Component {\n    @property(CCInteger)\n    fixedWidthDesignWidth: number = 1280;\n    @property(CCInteger)\n    fixedWidthDesignHeight: number = 720;\n\n    @property(CCInteger)\n    fixedHeightDesignWidth: number = 720;\n    @property(CCInteger)\n    fixedHeightDesignHeight: number = 1280;\n\n    @property(CCBoolean)\n    isAutoFit: boolean = true;\n\n    protected onLoad(): void {\n        if (this.isAutoFit)\n        {\n            this.autoFit();\n            window.addEventListener('resize', this.autoFit.bind(this));\n            // Screen.on('orientation-change', this.autoFit.bind(this));\n        }\n    }\n\n    protected start(): void {\n        if (this.isAutoFit)\n        {\n            this.autoFit();\n        }\n    }\n\n    private autoFit(): void {\n\n        let designSize = View.instance.getDesignResolutionSize();\n        // console.log(`desginSize = ${designSize}`);\n\n        // let visibleSize = View.instance.getVisibleSize();\n        // console.log(`visibleSize = ${visibleSize}`);\n\n        let viewPortRect = View.instance.getViewportRect();\n        View.instance.setOrientation\n        console.log(`viewPortRect = ${viewPortRect}`);\n        \n        let rateR = designSize.height / designSize.width;\n        let rateV = Math.abs(viewPortRect.size.height) / Math.abs(viewPortRect.size.width);\n        \n        // let rp = ResolutionPolicy.FIXED_HEIGHT;\n        // if (rateV < 1.0)\n        // {\n        //     rp = ResolutionPolicy.FIXED_WIDTH;\n        // }\n\n        console.log(`rateV = ${rateV}`)\n        if (rateV < 1.0)\n        {\n            View.instance.setDesignResolutionSize(this.fixedWidthDesignWidth, this.fixedWidthDesignHeight, ResolutionPolicy.FIXED_WIDTH);\n        }\n        else\n        {\n            View.instance.setDesignResolutionSize(this.fixedHeightDesignWidth, this.fixedHeightDesignHeight, ResolutionPolicy.FIXED_HEIGHT);\n        }\n    }\n}\n\n\n","import { _decorator, sys } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\n    if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n        const script = document.createElement(\"script\");\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\n        script.async = true;\n        script.onload = () => {\n            const intervalId = setInterval(() => {\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                    resolve((window as any).Telegram.WebApp);\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n        document.head.appendChild(script);\n    }\n});\n\nexport interface WebAppUser {\n    id: number;\n    is_bot: boolean;\n    first_name: string;\n    last_name?: string;\n    username?: string;\n    language_code?: string;\n    is_premium?: boolean;\n    added_to_attachment_menu?: boolean;\n    allows_write_to_pm?: boolean;\n    photo_url?: string;\n}\nexport interface WebAppChat {\n    id: number;\n    type: 'private' | 'group' | 'supergroup' | 'channel';\n    title: string;\n    username?: string;\n    photo_url?: string;\n}\nexport interface WebAppInitData {\n    query_id?: string;\n    user?: WebAppUser;\n    receiver?: WebAppUser;\n    chat?: WebAppChat;\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\n    chat_instance?: string;\n    start_param?: string;\n    can_send_after?: number;\n    auth_data: number;\n    hash: string;\n}\n\n@ccclass('TelegramWebApp')\nexport class TelegramWebApp {\n    private static _instance: TelegramWebApp;\n    private constructor() {\n\n    }\n    public static get Instance(): TelegramWebApp {\n        if (!TelegramWebApp._instance) {\n            TelegramWebApp._instance = new TelegramWebApp();\n        }\n        return TelegramWebApp._instance;\n    }\n\n    private _tgWebAppJS: any = null;\n    public async init(): Promise<{ success: boolean }> {\n        this._tgWebAppJS = await tgLoadPromise;\n\n        if (this._tgWebAppJS) {\n            return Promise.resolve({ success: true });\n        } else {\n            return Promise.resolve({ success: false });\n        }\n    }\n\n    public openTelegramLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openTelegramLink(url);\n    }\n\n    public openLink(url: string, options: any = {}) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openLink(url, options);\n    }\n\n    public share(url: string, text?: string) {\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\n        this.openTelegramLink(shareUrl);\n    }\n\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        const widget_link = {\n            text: shareText,\n            widget_link: {\n                url: widget_link_url,\n                name: widget_link_name,\n            },\n        };\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\n    }\n\n    public getTelegramWebApp() {\n        return this._tgWebAppJS;\n    }\n\n    public getTelegramWebAppInitData(): WebAppInitData {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe;\n    }\n\n\n    public getTelegramUser(): WebAppUser {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe.user;\n    }\n\n    public getTelegramInitData(): string {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initData;\n    }\n\n    public openInvoice(url: string, callback: any) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        this._tgWebAppJS.openInvoice(url, callback);\n    }\n\n    public alert(message: string) {\n        this._tgWebAppJS.showAlert(message);\n    }\n}\n\n\n"]}